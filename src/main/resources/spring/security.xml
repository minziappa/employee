<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
    xmlns:beans="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:lang="http://www.springframework.org/schema/lang"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
          http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<http auto-config='true' use-expressions="true" access-denied-page="/employee/login/denied">

	    <!-- You can add the Intercept-Url like the following this -->
			<intercept-url pattern="/employee/admin/**" access="hasRole('ROLE_ADMIN')" />
			<intercept-url pattern="/employee/user/**" access="hasRole('ROLE_ADMIN')" />
			<intercept-url pattern="/employee/file/**" access="hasRole('ROLE_ADMIN')" />
			<intercept-url pattern="/employee/file/**" access="hasRole('ROLE_USER')" />
			<intercept-url pattern="/employee/user/**" access="hasRole('ROLE_USER')" />

	    <logout logout-url="/employee/auth/logout" logout-success-url="/employee/"/>
	    <form-login
            login-page="/employee/login/index"
            authentication-failure-url="/employee/login/login?error=true"
            default-target-url="/employee/"/>
	</http>

	<!--  
  <beans:bean id="daoAuthenticationProvider"
      class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
      <beans:property name="userDetailsService" ref="userDetailsService"/>
  </beans:bean>

  <beans:bean id="authenticationManager"
      class="org.springframework.security.authentication.ProviderManager">
      <beans:property name="providers">
          <beans:list>
              <beans:ref local="daoAuthenticationProvider" />
          </beans:list>
      </beans:property>
  </beans:bean>
-->
	<authentication-manager>
		<!-- Custom Check2 
		<authentication-provider user-service-ref="userDetailsService">
			<password-encoder ref="passwordEncoder"/>
		</authentication-provider>
		 -->
	  <!-- Custom Check1 	  -->
	  <authentication-provider ref="defaultAuthenticationProvider"/>
	</authentication-manager>

</beans:beans>